version: '3.8'

services:
  mariadb:
    container_name: 'mariadb'
    build:
      context: ./requirements/mariadb/
      args:
        MYSQL_NAME: ${MYSQL_NAME}
        MYSQL_ROOTPASS: ${MYSQL_ROOTPASS}
        MYSQL_USERNAME_ADMIN: ${MYSQL_USERNAME_ADMIN}
        MYSQL_PASSWORD_ADMIN: ${MYSQL_PASSWORD_ADMIN}
        MYSQL_USERNAME: ${MYSQL_USERNAME}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    image: 'mariadb:inception'
    volumes:
      - database:/var/lib/mysql/
    networks:
      - inception
    restart: always
  wordpress:
    container_name: 'wordpress'
    build:
      context: ./requirements/wordpress/
      args:
        MYSQL_NAME: ${MYSQL_NAME}
        MYSQL_USERNAME_ADMIN: ${MYSQL_USERNAME_ADMIN}
        MYSQL_PASSWORD_ADMIN: ${MYSQL_PASSWORD_ADMIN}
        MYSQL_HOST: ${MYSQL_HOST}
        WEB_TITLE: ${WEB_TITLE}
        WEB_EMAIL: ${WEB_EMAIL}
        DOMAIN_NAME: ${DOMAIN_NAME}
    image: 'wordpress:inception'
    environment:
      MYSQL_NAME: ${MYSQL_NAME}
      MYSQL_USERNAME_ADMIN: ${MYSQL_USERNAME_ADMIN}
      MYSQL_PASSWORD_ADMIN: ${MYSQL_PASSWORD_ADMIN}
      MYSQL_HOST: ${MYSQL_HOST}
      WEB_TITLE: ${WEB_TITLE}
      WEB_EMAIL: ${WEB_EMAIL}
      DOMAIN_NAME: ${DOMAIN_NAME}
    volumes:
      - wordpress:/var/www/wordpress/
    networks:
      - inception
    restart: always
    depends_on:
      - mariadb
      - redis
  nginx:
    container_name: 'nginx'
    build:
      context: ./requirements/nginx
      args:
        DOMAIN_NAME: ${DOMAIN_NAME}
    image: 'nginx:inception'
    volumes:
      - wordpress:/var/www/wordpress/
    networks:
      - inception
    ports:
      - '80:80'
      - '443:443'
    restart: always
    depends_on:
      - wordpress
      - mariadb
  redis:
    container_name: 'redis'
    build:
      context: ./requirements/bonus/redis/
    image: 'redis:inception_bonus'
    networks:
      - inception
    restart: always
    depends_on:
      - mariadb
  adminer:
    container_name: 'adminer'
    build:
      context: ./requirements/bonus/adminer
    image: 'adminer:inception_bonus'
    volumes:
      - wordpress:/var/www/wordpress
    networks:
      - inception
    depends_on:
      - wordpress
      - nginx
  static-webpage:
    container_name: 'static_webpage'
    build:
      context: ./requirements/bonus/static_webpage
    image: 'static_webpage:inception_bonus'
    volumes:
      - wordpress:/var/www/wordpress/
    networks:
      - inception
    depends_on:
      - adminer
  ftp_server:
    container_name: 'ftp_server'
    build:
      context: ./requirements/bonus/ftp_server
      args:
        MYSQL_USERNAME_ADMIN: ${MYSQL_USERNAME_ADMIN}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    image: 'ftp_server:inception_bonus'
    environment:
      USERNAME: ${MYSQL_USERNAME_ADMIN}
      PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - wordpress:/var/www/wordpress/
    ports:
      - '20:20'
      - '21:21'
      - '40000-40009:40000-40009'
    networks:
      - inception
    depends_on:
      - wordpress
  prometheus:
    container_name: 'prometheus'
    build:
      context: ./requirements/bonus/prometheus
    image: 'prometheus:inception_bonus'
    ports:
      - '9090:9090'
    networks:
      - inception
    depends_on:
      - wordpress

volumes:
  database:
    name: database
    driver: local
    driver_opts:
      type: none
      o: "bind"
      device: $HOME/data/database
  wordpress:
    name: wordpress
    driver: local
    driver_opts:
      type: none
      o: "bind"
      device: $HOME/data/wordpress

networks:
  inception:
    name: inception
    driver: bridge